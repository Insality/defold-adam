local adam = require("adam.adam")
local actions = require("adam.actions")

function init(self)
	-- Template example
	-- TODO: how can I do make templates with custom parameters. For example pass spees
	-- in template usage place?
	local wasd_keys_get = adam.actions_template(
		actions.input.get_axis_actions("key_a", "key_d", "hor_move", true, actions.value("speed")),
		actions.input.get_axis_actions("key_s", "key_w", "ver_move", true, actions.value("speed"))
	)

	-- Nexted Template example
	local movable_action = adam.actions_template(
		wasd_keys_get,
		actions.vmath.set_xyz("move_vector", actions.value("hor_move"), actions.value("ver_move"), nil, true),
		actions.transform.translate(actions.value("move_vector"), true)
	)

	-- Template usage. It will create copy of template actions
	local idle = adam.state(
		actions.math.set("speed", 5),
		actions.input.get_action_pressed("touch", nil, true, "touch_pressed"),
		movable_action
	)

	local consume = adam.state(
		actions.math.set("speed", 3),
		movable_action,
		actions.transform.animate_scale(vmath.vector3(1.1), 0.25),
		actions.transform.animate_scale(vmath.vector3(1), 0.25, nil, 0.25),
		actions.time.delay(0.5, adam.FINISHED)
	)

	self.adam = adam.new(idle,
		{
			{idle, consume, actions.EVENT.TRIGGER_ENTER},
			{consume, idle},
			{idle, consume, "touch_pressed"}
		},
		{
			speed = 5,
			hor_move = 0,
			ver_move = 0,
			move_vector = vmath.vector3(0)
		}
	):start()

	msg.post(".", "acquire_input_focus")
end


function final(self)
	msg.post(".", "release_input_focus")
	self.adam:final()
end


function update(self, dt)
	self.adam:update(dt)
end


function on_input(self, action_id, action)
	self.adam:on_input(action_id, action)
end


function on_message(self, message_id, message, sender)
	self.adam:on_message(message_id, message, sender)
end
